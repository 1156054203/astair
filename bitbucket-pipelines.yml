# This is a sample build configuration for Python.
# Check our guides at https://confluence.atlassian.com/x/x4UWN for more examples.
# Only use spaces to indent your .yml configuration.
# -----
# You can specify a custom docker image from Docker Hub as your build environment.
pipelines:
  default:
    - parallel:
      - step: *build-test-py2
      - step: *build-test-py3
  branches:
    master:
      - parallel:
        - step: *build-test-py2
        - step: *build-test-py3
      - step:
          name: Deploy to test.pypi
          image: python:3.5.6
          deployment: staging
          script:
            - pip3 --cache-dir ~/.cache/pip3 install -r requirements.txt
            - pip3 --cache-dir ~/.cache/pip3 install twine
            - python3 setup.py sdist
            - python3 setup.py bdist_wheel --universal
            - twine upload --repository-url https://test.pypi.org/legacy/ dist/*
  tags:
    'v*':
      - parallel:
        - step: *build-test-py2
        - step: *build-test-py3
      step:
        name: Deploy to pypi
        image: python:3.5.6
        deployment: production
        script:
          - pip3 --cache-dir ~/.cache/pip3 install -r requirements.txt
          - pip3 --cache-dir ~/.cache/pip3 install twine
          - python3 setup.py sdist
          - python3 setup.py bdist_wheel --universal
          - twine upload dist/*

definitions:
  caches:
    pip3: ~/.cache/pip3
  steps:
    -step: &build-test-py2
      image: python:2.7.15
      name: Build and test Python2
      caches:
        - pip
      script:
        - pip install -r requirements.txt
        - pip install -r test_requirements.txt
        - mkdir -p test-results
        - nosetests --with-xunit --xunit-file=test-results/py2_combined_results.xml --with-coverage --cover-erase --cover-xml --cover-xml-file=test-results/py2_coverage.xml  --cover-package=astair tests/*
    -step: &build-test-py3
      image: python:3.5.6
      name: Build and test Python3
      caches:
        - pip3
      script:
        - pip3 --cache-dir ~/.cache/pip3 install -r requirements.txt
        - pip3 --cache-dir ~/.cache/pip3 install -r test_requirements.txt
        - mkdir -p test-results
        - nosetests --with-xunit --xunit-file=test-results/py3_combined_results.xml --with-coverage --cover-erase --cover-xml --cover-xml-file=test-results/py3_coverage.xml  --cover-package=astair tests/*